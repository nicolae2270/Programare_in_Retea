/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package smtp;

import java.awt.Color;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.border.Border;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import static smtp.MailController.inbox;
import static smtp.MailController.messages;

/**
 *
 * @author User
 */
public class MainWindow extends javax.swing.JFrame {

    MouseEvent getPositionEvent;
    // Validate list listener:
    //      true - listener isn't exist
    //      false - listener exist
    public static boolean listListener = true;
    
    private static int inboxMessageCount;

    MailController controller = MailController.getInstance();

    /**
     * Creates new form SendEmail
     * @throws javax.mail.MessagingException
     */
    public MainWindow() throws MessagingException {
        initComponents();

        InboxPanel.setVisible(false);
        
        // Save current inbox message count
        //inboxMessageCount = inbox.getMessageCount();
        
        //
        jLabelNewMessage.setVisible(false);
        
        // Create a new thread that verify inbox
        verifyInbox();
    }

    public void verifyInbox() {
        new Thread() {
            @Override
            public void run() {
                while (true) {
                    try {
                        Thread.sleep(1000);
                        try {
                            if (inbox.getMessageCount() != inboxMessageCount) {
                                messages = inbox.getMessages();
                                inboxMessageCount = inbox.getMessageCount();
                                 jLabelNewMessage.setVisible(true);
                            }
                        } catch (MessagingException e) {
                            try {
                                MailController.store.connect("smtp.gmail.com", MailController.username, MailController.password);
                            } catch (MessagingException ex) {
                                Logger.getLogger(MailController.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }
            }
        }.start();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelDragWindow = new javax.swing.JPanel();
        jPanelCloseWindow = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        OpenInboxPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabelNewMessage = new javax.swing.JLabel();
        SendEmailPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        SendPanel = new javax.swing.JPanel();
        TextFieldSendTo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextMessageToSend = new javax.swing.JTextArea();
        MessageToSend = new javax.swing.JLabel();
        SendTo = new javax.swing.JLabel();
        SendMessageButton = new javax.swing.JButton();
        jLabelMessageSend = new javax.swing.JLabel();
        MessageSubject = new javax.swing.JLabel();
        TextFieldMessageSubject = new javax.swing.JTextField();
        InboxPanel = new javax.swing.JPanel();
        SubjectListPanel = new javax.swing.JScrollPane();
        SubjectList = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        MessagePanel = new javax.swing.JPanel();
        jLabelMessageFrom = new javax.swing.JLabel();
        jLabelMessageOnDate = new javax.swing.JLabel();
        jLabelMessageSubject = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPanel = new javax.swing.JScrollPane();
        messageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelDragWindow.setBackground(new java.awt.Color(1, 50, 67));
        jPanelDragWindow.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanelDragWindowMouseDragged(evt);
            }
        });
        jPanelDragWindow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelDragWindowMousePressed(evt);
            }
        });

        jPanelCloseWindow.setBackground(new java.awt.Color(228, 241, 254));
        jPanelCloseWindow.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanelCloseWindowMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCloseWindowLayout = new javax.swing.GroupLayout(jPanelCloseWindow);
        jPanelCloseWindow.setLayout(jPanelCloseWindowLayout);
        jPanelCloseWindowLayout.setHorizontalGroup(
            jPanelCloseWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 64, Short.MAX_VALUE)
        );
        jPanelCloseWindowLayout.setVerticalGroup(
            jPanelCloseWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 63, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanelDragWindowLayout = new javax.swing.GroupLayout(jPanelDragWindow);
        jPanelDragWindow.setLayout(jPanelDragWindowLayout);
        jPanelDragWindowLayout.setHorizontalGroup(
            jPanelDragWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDragWindowLayout.createSequentialGroup()
                .addGap(0, 736, Short.MAX_VALUE)
                .addComponent(jPanelCloseWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanelDragWindowLayout.setVerticalGroup(
            jPanelDragWindowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDragWindowLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanelCloseWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanelDragWindow, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 60));

        jPanel2.setBackground(new java.awt.Color(44, 62, 80));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        OpenInboxPanel.setBackground(java.awt.Color.white);
        OpenInboxPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                OpenInboxPanelMousePressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_inbox_50px.png"))); // NOI18N
        jLabel2.setText("  Inbox");

        jLabelNewMessage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_new_30px.png"))); // NOI18N

        javax.swing.GroupLayout OpenInboxPanelLayout = new javax.swing.GroupLayout(OpenInboxPanel);
        OpenInboxPanel.setLayout(OpenInboxPanelLayout);
        OpenInboxPanelLayout.setHorizontalGroup(
            OpenInboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OpenInboxPanelLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelNewMessage)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        OpenInboxPanelLayout.setVerticalGroup(
            OpenInboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(OpenInboxPanelLayout.createSequentialGroup()
                .addComponent(jLabelNewMessage)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel2.add(OpenInboxPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 140, -1));

        SendEmailPanel.setBackground(new java.awt.Color(198, 241, 254));
        SendEmailPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SendEmailPanelMousePressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_send_50px.png"))); // NOI18N
        jLabel3.setText("  Send");

        javax.swing.GroupLayout SendEmailPanelLayout = new javax.swing.GroupLayout(SendEmailPanel);
        SendEmailPanel.setLayout(SendEmailPanelLayout);
        SendEmailPanelLayout.setHorizontalGroup(
            SendEmailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
        );
        SendEmailPanelLayout.setVerticalGroup(
            SendEmailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SendEmailPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3))
        );

        jPanel2.add(SendEmailPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 140, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 140, 440));

        SendPanel.setBackground(new java.awt.Color(52, 73, 94));
        SendPanel.setPreferredSize(new java.awt.Dimension(800, 500));
        SendPanel.setLayout(null);
        SendPanel.add(TextFieldSendTo);
        TextFieldSendTo.setBounds(280, 60, 230, 30);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextMessageToSend.setColumns(20);
        jTextMessageToSend.setRows(5);
        jScrollPane1.setViewportView(jTextMessageToSend);

        SendPanel.add(jScrollPane1);
        jScrollPane1.setBounds(280, 180, 230, 140);

        MessageToSend.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MessageToSend.setForeground(new java.awt.Color(240, 240, 240));
        MessageToSend.setText("Message");
        SendPanel.add(MessageToSend);
        MessageToSend.setBounds(80, 180, 110, 30);

        SendTo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        SendTo.setForeground(new java.awt.Color(240, 240, 240));
        SendTo.setText("To");
        SendPanel.add(SendTo);
        SendTo.setBounds(80, 60, 110, 30);

        SendMessageButton.setText("Send");
        SendMessageButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SendMessageButtonMouseClicked(evt);
            }
        });
        SendPanel.add(SendMessageButton);
        SendMessageButton.setBounds(360, 370, 79, 25);

        jLabelMessageSend.setForeground(new java.awt.Color(0, 230, 64));
        jLabelMessageSend.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SendPanel.add(jLabelMessageSend);
        jLabelMessageSend.setBounds(280, 330, 230, 30);

        MessageSubject.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        MessageSubject.setForeground(new java.awt.Color(240, 240, 240));
        MessageSubject.setText("Subject");
        SendPanel.add(MessageSubject);
        MessageSubject.setBounds(80, 120, 110, 30);
        SendPanel.add(TextFieldMessageSubject);
        TextFieldMessageSubject.setBounds(280, 120, 230, 30);

        getContentPane().add(SendPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 660, 440));

        InboxPanel.setBackground(new java.awt.Color(52, 73, 94));
        InboxPanel.setPreferredSize(new java.awt.Dimension(800, 500));

        SubjectList.setBackground(new java.awt.Color(52, 73, 94));
        SubjectList.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        SubjectList.setForeground(new java.awt.Color(255, 255, 255));
        SubjectList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        SubjectList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        SubjectListPanel.setViewportView(SubjectList);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(240, 240, 240));
        jLabel4.setText("Messages");

        javax.swing.GroupLayout InboxPanelLayout = new javax.swing.GroupLayout(InboxPanel);
        InboxPanel.setLayout(InboxPanelLayout);
        InboxPanelLayout.setHorizontalGroup(
            InboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InboxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SubjectListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(InboxPanelLayout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        InboxPanelLayout.setVerticalGroup(
            InboxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InboxPanelLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel4)
                .addGap(50, 50, 50)
                .addComponent(SubjectListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(InboxPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 660, 440));

        MessagePanel.setBackground(new java.awt.Color(52, 73, 94));
        MessagePanel.setPreferredSize(new java.awt.Dimension(800, 500));
        MessagePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabelMessageFrom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelMessageFrom.setForeground(new java.awt.Color(240, 240, 240));
        jLabelMessageFrom.setText("From");
        MessagePanel.add(jLabelMessageFrom, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, 20));

        jLabelMessageOnDate.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabelMessageOnDate.setForeground(new java.awt.Color(240, 240, 240));
        jLabelMessageOnDate.setText("Date send");
        MessagePanel.add(jLabelMessageOnDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 400, -1, 30));

        jLabelMessageSubject.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabelMessageSubject.setForeground(new java.awt.Color(240, 240, 240));
        jLabelMessageSubject.setText("Subject");
        MessagePanel.add(jLabelMessageSubject, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, -1, 20));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("From:");
        MessagePanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("Subject:");
        MessagePanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, 20));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(240, 240, 240));
        jLabel7.setText("Message:");
        MessagePanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, 20));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("On:");
        MessagePanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 400, -1, 30));

        jScrollPanel.setBackground(new java.awt.Color(52, 73, 94));
        jScrollPanel.setBorder(null);
        jScrollPanel.setForeground(new java.awt.Color(52, 73, 94));
        jScrollPanel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N

        messageLabel.setBackground(new java.awt.Color(52, 73, 94));
        messageLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        messageLabel.setForeground(new java.awt.Color(240, 240, 240));
        messageLabel.setText("jLabel1");
        messageLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        messageLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jScrollPanel.setViewportView(messageLabel);

        MessagePanel.add(jScrollPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 590, 200));

        getContentPane().add(MessagePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 660, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPanelCloseWindowMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelCloseWindowMousePressed
        try {
            // Destroy the controller components
            MailController.destroyComponents();
        } catch (MessagingException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.exit(0);
    }//GEN-LAST:event_jPanelCloseWindowMousePressed

    private void jPanelDragWindowMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDragWindowMouseDragged
        // Set new location
        setLocation(evt.getXOnScreen() - getPositionEvent.getX(),
                evt.getYOnScreen() - getPositionEvent.getY());
    }//GEN-LAST:event_jPanelDragWindowMouseDragged

    private void jPanelDragWindowMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanelDragWindowMousePressed
        // Get current position
        getPositionEvent = evt;
    }//GEN-LAST:event_jPanelDragWindowMousePressed

    private void SendMessageButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SendMessageButtonMouseClicked
        String sendTo = TextFieldSendTo.getText();
        String messageSubject = TextFieldMessageSubject.getText();
        String messageToSend = jTextMessageToSend.getText();

        Properties properties = new Properties();
        properties.put("mail.smtp.host", "smtp.gmail.com");
        properties.put("mail.smtp.port", "587");
        properties.put("mail.smtp.auth", "true");
        properties.put("mail.smtp.starttls.enable", "true"); //TLS

        Session session = Session.getInstance(properties,
                new javax.mail.Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(MailController.username, MailController.password);
            }
        });

        Message message;

        try {

            message = new MimeMessage(session);
            message.setFrom(new InternetAddress(MailController.username));
            message.setRecipients(
                    Message.RecipientType.TO,
                    InternetAddress.parse(sendTo)
            );

            message.setSubject(messageSubject);
            message.setText(messageToSend);

            Transport.send(message);

            jLabelMessageSend.setForeground(Color.green);
            jLabelMessageSend.setText("Succes");

        } catch (Exception e) {
            jLabelMessageSend.setForeground(Color.red);
            jLabelMessageSend.setText("Exception");
        }
    }//GEN-LAST:event_SendMessageButtonMouseClicked

    private void OpenInboxPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OpenInboxPanelMousePressed
        // OnPressed change color
        OpenInboxPanel.setBackground(new Color(198, 241, 254));
        SendEmailPanel.setBackground(Color.WHITE);
        // Set panel with inbox messages true
        InboxPanel.setVisible(true);
        SendPanel.setVisible(false);
        
        jLabelNewMessage.setVisible(false);

        // Create new list model
        DefaultListModel listModel = new DefaultListModel();

        try {
            // Add subject to model
            for (int i = MailController.inbox.getMessageCount() - 1; i >= 0; i--) {
                listModel.addElement(MailController.messages[i].getSubject());
            }
        } catch (MessagingException ex) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Set model to table
        SubjectList.setModel(listModel);
        Border border = BorderFactory.createEmptyBorder();
        SubjectList.setBorder(border);

        // Verify if list have listener
        if (listListener) {
            listListener = false;

            // Add list listener
            SubjectList.addListSelectionListener(new ListSelectionListener() {
                @Override
                public void valueChanged(ListSelectionEvent e) {
                    if (!e.getValueIsAdjusting()) {
                        try {

                            int selectedIndex = SubjectList.getSelectedIndex();
                            int indexOfObjectInArray = MailController.inbox.getMessageCount() - selectedIndex - 1;

                            if (indexOfObjectInArray < MailController.inbox.getMessageCount()) {
                                Message message = MailController.messages[MailController.inbox.getMessageCount() - selectedIndex - 1];
                                String messageHtml = getMessage(message.getContent());

                                jLabelMessageFrom.setText(message.getFrom()[0].toString());
                                jLabelMessageOnDate.setText(message.getSentDate().toString());
                                jLabelMessageSubject.setText(message.getSubject());
                                                                
                                messageLabel.setText(messageHtml);
                                
                                //jScrollPanel;
                                jScrollPanel.getViewport().setBackground(new Color(52,73,94));

                                InboxPanel.setVisible(false);
                                MessagePanel.setVisible(true);
                            }

                        } catch (IOException | MessagingException ex) {
                            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }

            });
            
            
        }
    }//GEN-LAST:event_OpenInboxPanelMousePressed

    private void SendEmailPanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SendEmailPanelMousePressed
        // OnPressed change color
        SendEmailPanel.setBackground(new Color(198, 241, 254));
        OpenInboxPanel.setBackground(Color.WHITE);

        // Set panel with mail data true
        SendPanel.setVisible(true);
        InboxPanel.setVisible(false);
    }//GEN-LAST:event_SendEmailPanelMousePressed

    public String getMessage(Object content) throws MessagingException, IOException {
        // Open html tag
        String message = "<html>";

        System.out.println(content);

        // If message have just one line
        if (content instanceof String) {
            message = message.concat((String) content);

        // Concatinate multipart message in string
        } else if (content instanceof Multipart) {
            
            // Create a multipart
            Multipart multipart = (Multipart) content;
            // Get count of parts
            int multipartCount = multipart.getCount();
            for (int j = 0; j < multipartCount - 1; j++) {
                // Get first and second part
                String frstpart = (String) multipart.getBodyPart(j).getContent();
                String scndpart = (String) multipart.getBodyPart(j + 1).getContent();
                
                String part;
                
                // Compare parts
                if (scndpart.contains(frstpart)) {
                    part = scndpart;
                    System.out.println("scnd");
                } else {
                    part = frstpart;
                    System.out.println("frst");
                }

                if (part instanceof String) {
                    message = message.concat(part + "<br>");
                }
            }
        }

        // Close html tag
        message = message.concat("</html>");

        // Replace every new line with <br>(new line in html)
        message = message.replace("\n", "<br>");

        return message;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new MainWindow().setVisible(true);
                } catch (MessagingException ex) {
                    Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel InboxPanel;
    private javax.swing.JPanel MessagePanel;
    private javax.swing.JLabel MessageSubject;
    private javax.swing.JLabel MessageToSend;
    private javax.swing.JPanel OpenInboxPanel;
    private javax.swing.JPanel SendEmailPanel;
    private javax.swing.JButton SendMessageButton;
    private javax.swing.JPanel SendPanel;
    private javax.swing.JLabel SendTo;
    private javax.swing.JList<String> SubjectList;
    private javax.swing.JScrollPane SubjectListPanel;
    private javax.swing.JTextField TextFieldMessageSubject;
    private javax.swing.JTextField TextFieldSendTo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelMessageFrom;
    private javax.swing.JLabel jLabelMessageOnDate;
    private javax.swing.JLabel jLabelMessageSend;
    private javax.swing.JLabel jLabelMessageSubject;
    private javax.swing.JLabel jLabelNewMessage;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelCloseWindow;
    private javax.swing.JPanel jPanelDragWindow;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPanel;
    private javax.swing.JTextArea jTextMessageToSend;
    private javax.swing.JLabel messageLabel;
    // End of variables declaration//GEN-END:variables
}
